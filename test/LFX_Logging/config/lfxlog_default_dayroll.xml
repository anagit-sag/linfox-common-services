<!--
#######################################################################################
Packages, folders and services are converted to a dot-separated heirarchy as follows:

For example, the service: 
  LfxLog/lfx.logger.pub:log
Becomes: 
  LfxLog.lfx.logger.pub.log


Examples:
=========

  Log Levels:
  ===========
  OFF
  FATAL
  ERROR
  WARN
  INFO
  DEBUG
  TRACE
  ALL

  Patterns:
  =========
  <pattern>HI %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
  <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %3([%.-1level]) %3(123) %-30(%X{pkg}/%X{svc_short}:) trackingID: %X{trackingID} %msg%n</pattern>

  MDC Values:
  ===========
  %X{mdc-name}

  STDOUT Appender:
  ================
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>HI %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
    </encoder>
  </appender>

  FILE Appender:
  ==============
  <appender name="FILE" class="ch.qos.logback.core.FileAppender">
    <file>logs/LfxLogger.log</file>
    <append>true</append>
    <encoder>
      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %3([%.-1level]) %3(123) %-30(%X{pkg}/%X{svc_short}:) trackingID: %X{trackingID} %msg%n</pattern>
    </encoder>
  </appender>

  Setting log levels:
  ===================
  Package-level:
  <logger name="LfxLoggerTest" level="TRACE" />

  Folder-level:
  <logger name="LfxLoggerTest.LfxLoggertest" level="TRACE" />

  Service-level:
  <logger name="LfxLoggerTest.LfxLoggertest.log" level="TRACE" />

  Root Logger:
  ============
  <root level="ERROR">
	<appender-ref ref="STDOUT"/> 
	<appender-ref ref="FILE"/>
  </root>
  
  Send a logger to a different appender:
  ======================================
  <logger name="LfxLoggerTest.LfxLoggertest.topLevelService" level="TRACE" >
	<appender-ref ref="FILE2"/>
  </logger>
  
#######################################################################################
-->

<configuration scan="true" scanPeriod="30 seconds">

  <!-- Define Appenders -->

  <!-- Default LfxLogger Appender -->
  <!-- Add your own custom appenders if you wish -->
  <appender name="LfxLogDefaultAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>G:/logs/LfxFramework/lfxlog.log</file>
    <append>true</append>
	    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
    	<fileNamePattern>G:/logs/LfxFramework/lfxlog.%d{yyyy-MM-dd}.log</fileNamePattern>
    	<maxHistory>8</maxHistory>
    </rollingPolicy>
	
    <encoder>
      <pattern>%d{yyyy-MM-dd HH:mm:ss} %logger{50} %3([%.-1level]): %msg%n</pattern>
	</encoder>
  </appender>
  
  
  
    <appender name="AuditAppender" class="ch.qos.logback.core.rolling.RollingFileAppender" >
    <file>G:/logs/LfxFramework/audit.log</file>
    <append>true</append>
    
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
    	<fileNamePattern>G:/logs/LfxFramework/audit.%d{yyyy-MM-dd}.log</fileNamePattern>
    	<maxHistory>8</maxHistory>
    </rollingPolicy>
    
    <encoder>
	 <!-- <pattern>%d{yyyy-MM-dd HH:mm:ss} [${HOSTNAME}] - [%thread] - %logger{36} %3([%.-5level)] : %msg%n</pattern>-->
	   <!--<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %3([%.-1level]) %3(123) %-30(%X{pkg}/%X{svc_short}:) trackingID: %X{trackingID} %msg%n</pattern>-->
	   <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [${HOSTNAME}] - %logger{36} %3([%.-5level)] : %msg%n</pattern>
    </encoder>
  </appender>
  
  <logger name="Audit" level="INFO" additivity="false">
              <appender-ref ref="AuditAppender"/>
  </logger>
  

    <appender name="FaultAppender" class="ch.qos.logback.core.rolling.RollingFileAppender" >
    <file>G:/logs/LfxFramework/fault.log</file>
    <append>true</append>
    
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
    	<fileNamePattern>G:/logs/LfxFramework/fault.%d{yyyy-MM-dd}.log</fileNamePattern>
    	<maxHistory>8</maxHistory>
    </rollingPolicy>
    
    <encoder>
     <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [${HOSTNAME}] - %logger{36} %3([%.-5level)] : %msg%n</pattern>
    </encoder>
  </appender>
  
  <logger name="Fault" level="ERROR" additivity="false">
     <appender-ref ref="FaultAppender"/>
  </logger>
  

  <!-- define Reporting logger -->
	<appender name="ReportingAppender" class="ch.qos.logback.core.rolling.RollingFileAppender" >
		<file>G:/logs/LfxFramework/Reporting.log</file>
		<append>true</append>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>G:/logs/LfxFramework/Reporting.%d{yyyy-MM-dd}.log</fileNamePattern>
			<maxHistory>8</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [${HOSTNAME}] - %logger{36} %3([%.-5level)] : %msg%n</pattern>
		</encoder>
	</appender>
	<logger name="Reporting" level="INFO" additivity="false">
		<appender-ref ref="ReportingAppender"/>
	</logger>

	<!-- define SynQ logger -->
	<appender name="SynQAppender" class="ch.qos.logback.core.rolling.RollingFileAppender" >
		<file>G:/logs/LfxFramework/SynQ.log</file>
		<append>true</append>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>G:/logs/LfxFramework/SynQ.%d{yyyy-MM-dd}.log</fileNamePattern>
			<maxHistory>8</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [${HOSTNAME}] - %logger{36} %3([%.-5level)] : %msg%n</pattern>
		</encoder>
	</appender>
	<logger name="SynQ" level="INFO" additivity="false">
		<appender-ref ref="SynQAppender"/>
	</logger>

  <!-- Set root log level and appender(s) -->
  <root level="ALL">
   <appender-ref ref="LfxLogDefaultAppender"/>
  </root>

</configuration>

